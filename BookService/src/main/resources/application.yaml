spring:
  application:
    name: BookService
  kafka:
    consumer:
      auto-offset-reset: earliest  # Ensures the consumer starts from the earliest offset if no offset is found
      add-book-topic: add-book-topic
      add-author-topic: add-author-topic
      add-genre-topic: add-genre-topic
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
    schema:
      registry:
        url:  http://${SCHEMA_REGISTRY_HOST:127.0.0.1}:9091
  datasource:
    url: jdbc:mysql://${BOOK_SERVICE_DB_HOST:localhost}:${BOOK_SERVICE_DB_PORT:3306}/${BOOK_SERVICE_DB_NAME:book_service}
    username: ${BOOK_SERVICE_DB_USERNAME:root}
    password: ${BOOK_SERVICE_DB_PASSWORD:truongquangchu}
  jpa:
    hibernate:
      ddl-auto: none  # Auto-update the schema (use "validate", "none", "create", "create-drop" as needed)
    show-sql: true  # Show SQL queries in the console
    database-platform: org.hibernate.dialect.MySQL8Dialect  # Hibernate dialect for MySQL 8 or newer
server:
  port: 8083
app:
  api:
    default-page-size: 10
  gateway:
    url: http://${API_GATEWAY_HOST:localhost}:8081
springdoc:
  api-docs:
    enabled: true
    path: /api/v3/api-docs
  swagger-ui:
    enabled: true
    path: /api/swagger-ui.html