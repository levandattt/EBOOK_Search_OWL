spring:
  application:
    name: AdminService  # The name of your Spring Boot application
  kafka:
    consumer:
      auto-offset-reset: earliest  # Ensures the consumer starts from the earliest offset if no offset is found
      add-book-topic: add-book-topic
    bootstrap-servers: 'localhost:9092'  # Kafka broker address
    # custom
    schema:
      registry:
        url: 'http://127.0.0.1:9091'  # Custom configuration for schema registry (used with Kafka and Avro)
  datasource:
    url: jdbc:mysql://${ADMIN_BOOK_SEARCHING_DB_HOST:localhost}:${ADMIN_BOOK_SEARCHING_DB_PORT:3306}/${ADMIN_BOOK_SEARCHING_DB_NAME:admin_book_management}
    username: ${ADMIN_BOOK_SEARCHING_DB_USERNAME:root}
    password: ${ADMIN_BOOK_SEARCHING_DB_PASSWORD:truongquangchu}
  jpa:
    hibernate:
      ddl-auto: update  # Auto-update the schema (use "validate", "none", "create", "create-drop" as needed)
    show-sql: true  # Show SQL queries in the console
    database-platform: org.hibernate.dialect.MySQL8Dialect  # Hibernate dialect for MySQL 8 or newer
server:
  port: 8082  # Specifies the port for your Spring Boot application (AdminService) to run on
springdoc:
  api-docs:
    enabled: true
    path: /api/v3/api-docs
  swagger-ui:
    enabled: true
    path: /api/swagger-ui.html

