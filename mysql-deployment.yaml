apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  custom-mysqld.cnf: |
    [mysqld]
    socket=/var/lib/mysql/mysql.sock
    bind-address=0.0.0.0
    [client]
    socket=/var/lib/mysql/mysql.sock
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-db
data:
  init-multiple-databases.sql: |
    CREATE DATABASE IF NOT EXISTS admin_book_management;
    CREATE DATABASE IF NOT EXISTS authentication_service;
    CREATE DATABASE IF NOT EXISTS book_service;
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:8.0
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "truongquangchu"
            - name: MYSQL_DATABASE
              value: "admin_book_management"  # Primary database created by MYSQL_DATABASE
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-config-volume
              mountPath: /etc/mysql/conf.d/
            - name: init-db
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: mysql-config-volume
          configMap:
            name: mysql-config
        - name: init-db
          configMap:
            name: mysql-init-db
---
apiVersion: v1
kind: Service
metadata:
  name: mysql  # This will be the hostname your application uses to connect
spec:
  selector:
    app: mysql  # Must match the labels in your MySQL Deployment
  ports:
    - protocol: TCP
      port: 3306       # Port exposed by the Service
      targetPort: 3306 # Port on which MySQL container is listening